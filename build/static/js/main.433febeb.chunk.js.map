{"version":3,"sources":["components/Tile.js","components/Board.js","App.js","index.js"],"names":["Tile","index","alert","_this","this","_this$props","props","value","readOnly","react_default","a","createElement","className","type","min","max","disabled","onChange","e","target","React","Component","Board","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","board","map","i","src_components_Tile","key","onValueChange","initialBoard","App","state","newGame","arr","tab","sudoku","generate","split","console","log","generateTable","concat","solved","solve","join","setState","toConsumableArray","tile","newValue","_this2","src_components_Board","bind","onClick","handleSubmit","newGameClicked","solveBoard","restartBoard","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.433febeb.chunk.js","sourcesContent":["import React from 'react';\nimport Board from './Board';\nimport styles from './Tile.scss';\n\n\nclass Tile extends React.Component{\n\n     breakline(index){\n        if(index % 9 == 0){\n            alert('</br>')\n        }\n    }\n\n\n  \n    render(){\n\n        const { value, readOnly } = this.props;\n\n    \n       \n        let count = 0;\n\n        return(\n\n            <div className='container'>\n          \n             <input type=\"number\" min=\"1\" max=\"9\" className='item'\n             value={value === \".\" ? \"\" : value}\n             disabled={readOnly}\n            \n             onChange = {(e) => {\n                 this.props.onChange(this.props, e.target.value);\n             }}\n            \n             />\n          \n             </div>\n    \n             )\n        }\n    }\n\n\nexport default Tile;","import React from 'react';\nimport Tile from './Tile';\nimport App from '../App';\nimport styles from './Board.scss';\n\n class Board extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n \n\n  render() {\n    \n      return (\n        <div className=\"container\">\n          {this.props.board.map((value,i) => {\n            return <Tile\n             key = {i} \n             index = {i} \n             value = {value} \n             onChange = {this.props.onValueChange}\n             readOnly = {this.props.initialBoard[i] !=='.'}\n             />\n          })}\n       </div>\n      );\n    }\n}\n\nexport default Board;","import React from 'react';\nimport sudoku from 'sudoku-umd';\nimport Board from './components/Board';\nimport styles from './components/Buttons.scss';\nimport styles2 from './components/App.scss';\n\n\nfunction generateTable(){\n  let tab = sudoku.generate('easy');\n  let arr = tab.split(\"\");\n  console.log(tab);\n  return arr;\n}\n\nclass App extends React.Component{\n\n constructor(){\n  super();\n\n  this.state = this.newGame();\n\n }\n\n\n\nnewGame(){\n\n  let arr = generateTable();\n\n  return{\n    initialBoard: arr,\n    board: [].concat(arr),\n    solved: sudoku.solve(arr.join(''))\n  }\n}\n\nnewGameClicked(){\n  this.setState(this.newGame());\n}\n\nsolve(){\n  return sudoku.solve(this.state.initialBoard.join(''));\n}\n\nhandleSubmit(){\n  const currentBoard = this.state.board.join('');\n  const { solved } = this.state;\n\n  if(currentBoard === solved){\n    alert('Congratulations');\n  }\n  else{\n    alert(\"Try again\");\n  }\n}\n\nsolveBoard(){\n  this.setState({\n    board: [...this.state.solved]\n  })\n}\n\nrestartBoard(){\n  this.setState({\n    board: [...this.state.initialBoard]\n  })\n}\n\nonValueChange(tile, newValue){\n  const { board } = this.state;\n\n  board[tile.index] = newValue;\n\n  this.setState( { board});\n}\n\nrender(){\n    return(\n      <div className=\"App\">\n      <h1 className=\"title\">Sudoku</h1>\n      <Board board={this.state.board} initialBoard={this.state.initialBoard} onValueChange = {this.onValueChange.bind(this)}/>\n      <div className=\"buttons\">\n          <button onClick= {() => this.handleSubmit()} className=\"btn\">Check</button>\n          <button onClick= {() => this.newGameClicked()} className=\"btn\">New Game</button>\n          <button onClick= {() => this.solveBoard()} className=\"btn\">Solve</button>\n          <button onClick= {()=> this.restartBoard()} className=\"btn\">Restart</button>\n      </div>\n   </div>\n    )\n     \n    }\n \n  }\n \nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('app')\n  );\n  "],"sourceRoot":""}