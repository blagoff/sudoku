{"version":3,"sources":["components/Tile.js","components/Board.js","App.js","index.js"],"names":["Tile","index","alert","_this","this","_this$props","props","value","readOnly","react_default","a","createElement","className","type","min","max","disabled","onChange","e","target","React","Component","Board","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","board","map","i","src_components_Tile","key","onValueChange","initialBoard","App","state","newGame","arr","tab","sudoku","generate","split","console","log","generateTable","concat","solved","solve","join","setState","toConsumableArray","tile","newValue","_this2","src_components_Board","bind","onClick","handleSubmit","newGameClicked","solveBoard","restartBoard","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.433febeb.chunk.js","sourcesContent":["import React from 'react';\r\nimport Board from './Board';\r\nimport styles from './Tile.scss';\r\n\r\n\r\nclass Tile extends React.Component{\r\n\r\n     breakline(index){\r\n        if(index % 9 == 0){\r\n            alert('</br>')\r\n        }\r\n    }\r\n\r\n\r\n  \r\n    render(){\r\n\r\n        const { value, readOnly } = this.props;\r\n\r\n    \r\n       \r\n        let count = 0;\r\n\r\n        return(\r\n\r\n            <div className='container'>\r\n          \r\n             <input type=\"number\" min=\"1\" max=\"9\" className='item'\r\n             value={value === \".\" ? \"\" : value}\r\n             disabled={readOnly}\r\n            \r\n             onChange = {(e) => {\r\n                 this.props.onChange(this.props, e.target.value);\r\n             }}\r\n            \r\n             />\r\n          \r\n             </div>\r\n    \r\n             )\r\n        }\r\n    }\r\n\r\n\r\nexport default Tile;","import React from 'react';\r\nimport Tile from './Tile';\r\nimport App from '../App';\r\nimport styles from './Board.scss';\r\n\r\n class Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n    \r\n      return (\r\n        <div className=\"container\">\r\n          {this.props.board.map((value,i) => {\r\n            return <Tile\r\n             key = {i} \r\n             index = {i} \r\n             value = {value} \r\n             onChange = {this.props.onValueChange}\r\n             readOnly = {this.props.initialBoard[i] !=='.'}\r\n             />\r\n          })}\r\n       </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport sudoku from 'sudoku-umd';\r\nimport Board from './components/Board';\r\nimport styles from './components/Buttons.scss';\r\nimport styles2 from './components/App.scss';\r\n\r\n\r\nfunction generateTable(){\r\n  let tab = sudoku.generate('easy');\r\n  let arr = tab.split(\"\");\r\n  console.log(tab);\r\n  return arr;\r\n}\r\n\r\nclass App extends React.Component{\r\n\r\n constructor(){\r\n  super();\r\n\r\n  this.state = this.newGame();\r\n\r\n }\r\n\r\n\r\n\r\nnewGame(){\r\n\r\n  let arr = generateTable();\r\n\r\n  return{\r\n    initialBoard: arr,\r\n    board: [].concat(arr),\r\n    solved: sudoku.solve(arr.join(''))\r\n  }\r\n}\r\n\r\nnewGameClicked(){\r\n  this.setState(this.newGame());\r\n}\r\n\r\nsolve(){\r\n  return sudoku.solve(this.state.initialBoard.join(''));\r\n}\r\n\r\nhandleSubmit(){\r\n  const currentBoard = this.state.board.join('');\r\n  const { solved } = this.state;\r\n\r\n  if(currentBoard === solved){\r\n    alert('Congratulations');\r\n  }\r\n  else{\r\n    alert(\"Try again\");\r\n  }\r\n}\r\n\r\nsolveBoard(){\r\n  this.setState({\r\n    board: [...this.state.solved]\r\n  })\r\n}\r\n\r\nrestartBoard(){\r\n  this.setState({\r\n    board: [...this.state.initialBoard]\r\n  })\r\n}\r\n\r\nonValueChange(tile, newValue){\r\n  const { board } = this.state;\r\n\r\n  board[tile.index] = newValue;\r\n\r\n  this.setState( { board});\r\n}\r\n\r\nrender(){\r\n    return(\r\n      <div className=\"App\">\r\n      <h1 className=\"title\">Sudoku</h1>\r\n      <Board board={this.state.board} initialBoard={this.state.initialBoard} onValueChange = {this.onValueChange.bind(this)}/>\r\n      <div className=\"buttons\">\r\n          <button onClick= {() => this.handleSubmit()} className=\"btn\">Check</button>\r\n          <button onClick= {() => this.newGameClicked()} className=\"btn\">New Game</button>\r\n          <button onClick= {() => this.solveBoard()} className=\"btn\">Solve</button>\r\n          <button onClick= {()=> this.restartBoard()} className=\"btn\">Restart</button>\r\n      </div>\r\n   </div>\r\n    )\r\n     \r\n    }\r\n \r\n  }\r\n \r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('app')\r\n  );\r\n  "],"sourceRoot":""}